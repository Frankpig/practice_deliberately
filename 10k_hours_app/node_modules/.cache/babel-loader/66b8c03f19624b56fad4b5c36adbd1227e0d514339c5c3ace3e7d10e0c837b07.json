{"ast":null,"code":"var _jsxFileName = \"/Users/handsomeboy/Documents/playplay/10k_hours/10k_hours_app/src/components/ChartTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, BarController, BarElement, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartTest = () => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    console.log('ChartTest组件已加载');\n\n    // 销毁旧图表\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n      console.log('旧图表已销毁');\n    }\n\n    // 手动注册所需组件\n    Chart.register(BarController, BarElement, XAxis, YAxis, CartesianGrid, Tooltip, Legend);\n    console.log('Chart.js组件已注册');\n\n    // 创建测试数据\n    const data = {\n      labels: ['编程', '英语', '吉他'],\n      datasets: [{\n        label: '练习时间(小时)',\n        data: [500, 1000, 200],\n        backgroundColor: ['rgba(97, 218, 251, 0.5)', 'rgba(33, 161, 241, 0.5)', 'rgba(123, 31, 162, 0.5)'],\n        borderColor: ['rgba(97, 218, 251, 1)', 'rgba(33, 161, 241, 1)', 'rgba(123, 31, 162, 1)'],\n        borderWidth: 1\n      }]\n    };\n    console.log('测试数据已创建:', data);\n\n    // 创建图表\n    if (chartRef.current) {\n      try {\n        chartInstance.current = new Chart(chartRef.current, {\n          type: 'bar',\n          data: data,\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: true\n              },\n              tooltip: {\n                enabled: true\n              }\n            }\n          }\n        });\n        console.log('图表创建成功');\n      } catch (error) {\n        console.error('创建图表时出错:', error);\n      }\n    } else {\n      console.error('chartRef.current为空');\n    }\n\n    // 组件卸载时销毁图表\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        console.log('组件卸载，图表已销毁');\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartTest, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = ChartTest;\nexport default ChartTest;\nvar _c;\n$RefreshReg$(_c, \"ChartTest\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","BarController","BarElement","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ChartTest","_s","chartRef","chartInstance","console","log","current","destroy","register","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","type","options","responsive","scales","y","beginAtZero","plugins","legend","display","tooltip","enabled","error","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/handsomeboy/Documents/playplay/10k_hours/10k_hours_app/src/components/ChartTest.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Chart, BarController, BarElement, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'chart.js';\n\nconst ChartTest = () => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    console.log('ChartTest组件已加载');\n\n    // 销毁旧图表\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n      console.log('旧图表已销毁');\n    }\n\n    // 手动注册所需组件\n    Chart.register(BarController, BarElement, XAxis, YAxis, CartesianGrid, Tooltip, Legend);\n    console.log('Chart.js组件已注册');\n\n    // 创建测试数据\n    const data = {\n      labels: ['编程', '英语', '吉他'],\n      datasets: [{\n        label: '练习时间(小时)',\n        data: [500, 1000, 200],\n        backgroundColor: [\n          'rgba(97, 218, 251, 0.5)',\n          'rgba(33, 161, 241, 0.5)',\n          'rgba(123, 31, 162, 0.5)'\n        ],\n        borderColor: [\n          'rgba(97, 218, 251, 1)',\n          'rgba(33, 161, 241, 1)',\n          'rgba(123, 31, 162, 1)'\n        ],\n        borderWidth: 1\n      }]\n    };\n\n    console.log('测试数据已创建:', data);\n\n    // 创建图表\n    if (chartRef.current) {\n      try {\n        chartInstance.current = new Chart(chartRef.current, {\n          type: 'bar',\n          data: data,\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: true\n              },\n              tooltip: {\n                enabled: true\n              }\n            }\n          }\n        });\n        console.log('图表创建成功');\n      } catch (error) {\n        console.error('创建图表时出错:', error);\n      }\n    } else {\n      console.error('chartRef.current为空');\n    }\n\n    // 组件卸载时销毁图表\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        console.log('组件卸载，图表已销毁');\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{ width: '100%', height: '400px' }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default ChartTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}